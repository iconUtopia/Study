// https://github.com/JasonkayZK/typescript_learn/tree/2-compile-options 编译文档解释
{
  "include": [
    "./src"
  ], /* 配置 tsc 命令编译 数组内 的文件，一个 * 表示任意文件，两个 ** 表示任意目录，可以写正则，会被 exclude 排除 */
  "exclude": [
    "config",
    "node_modules",
    "build",
    "scripts",
    "acceptance-tests",
    "webpack",
    "jest",
    "tslint:latest",
    "tslint-config-prettier"
  ], /* 配置 tsc 命令编译 数组外 的文件 */
  // "files":["demo1.ts"], /* 作用和included一样，不可以写正则，不会被 exclude 排除 */
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig.json to read more about this file */
    /* Basic Options */
    // "incremental": true,                         /* 启用渐进式编译功能 */
    "target": "es6", /* 指定ECMAScript目标版本：'ES3'（默认）、'ES5'、'ES2015'、'ES2016'、'ES2017'、'ES2018'、'ES2019'、'ES2020'、或'ESNEXT'。 */
    "module": "es2015", /* 指定模块代码生成："none"、"commonjs"、"amd"、"system"、"umd"、"es2015"、"es2020"、或 "ESNext"。 */
    "lib": [
      "ES6",
      "DOM"
    ], /* 指定要包含在编译中的库文件。 */
    "allowJs": true, /* 允许javascript文件被编译。 */
    "checkJs": true, /* 报告.js文件中的错误。 */
    "jsx": "react", /* 指定JSX代码生成："preserve"、"react-native"、"react"、"react-jsx "或 "react-jsxdev"。 */
    // "declaration": true,                         /* Generates corresponding '.d.ts' file. */
    // "declarationMap": true,                      /* Generates a sourcemap for each corresponding '.d.ts' file. */
    "sourceMap": true, /* 生成相应的'.map'文件。 */
    // "outFile": "./",                             /* Concatenate and emit output to single file. */
    "outDir": "./dist", /* 编译后文件的所在目录 */
    // "rootDir": "./",                             /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    // "composite": true,                           /* Enable project compilation */
    // "tsBuildInfoFile": "./",                     /* Specify file to store incremental compilation information */
    "removeComments": true, /* ts转js编译的时候去掉注释 */
    // "noEmit": true,                              /* Do not emit outputs. */
    // "importHelpers": true,                       /* Import emit helpers from 'tslib'. */
    // "downlevelIteration": true,                  /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
    // "isolatedModules": true,                     /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
    /* Strict Type-Checking Options */
    "strict": true, /* 编译和书写规范严格按照 TypeScript 的规范来执行。若开启此项，此项至 Additional Checks 之间的所有项都固定为 true  */
    // "noImplicitAny": true,                       /* Raise error on expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": true,                    /* Enable strict null checks. */
    // "strictFunctionTypes": true,                 /* Enable strict checking of function types. */
    // "strictBindCallApply": true,                 /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // "strictPropertyInitialization": true,        /* Enable strict checking of property initialization in classes. */
    // "noImplicitThis": true,                      /* Raise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": true,                        /* Parse in strict mode and emit "use strict" for each source file. */
    /* Additional Checks */
    "noUnusedLocals": true, /* 检查未使用的局部变量，开启后没有使用的变量不会进行编译 */
    // "noUnusedParameters": true,                  /* Report errors on unused parameters. */
    "noImplicitReturns": true, /* 检查函数没有隐式的返回值 */
    "noFallthroughCasesInSwitch": true, /* 检查switch语句包含正确的break */
    // "noUncheckedIndexedAccess": true,            /* Include 'undefined' in index signature results */
    // "noPropertyAccessFromIndexSignature": true,  /* Require undeclared properties from index signatures to use element accesses. */
    /* Module Resolution Options */
    "moduleResolution": "node", /* 指定模块解析策略：'node'（Node.js）或'classic'（TypeScript 1.6之前）。 */
    "baseUrl": "./", /* 用于解析非绝对模块名的基本目录。 */
    "paths": {
      "@/*": [
        "./src/*"
      ]
    }, /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // "rootDirs": [],                              /* List of root folders whose combined content represents the structure of the project at runtime. */
    // "typeRoots": [],                             /* List of folders to include type definitions from. */
    // "types": [],                                 /* Type declaration files to be included in compilation. */
    "allowSyntheticDefaultImports": true, /* 允许从没有默认导出的模块中默认导入。这并不影响代码发出，只影响类型检查。. */
    "esModuleInterop": true, /* 通过为所有导入创建命名空间对象，允许CommonJS和ES模块之间的互操作性。意味着“allowSyntheticDefaultImports”。*/
    // "preserveSymlinks": true,                    /* Do not resolve the real path of symlinks. */
    // "allowUmdGlobalAccess": true,                /* Allow accessing UMD globals from modules. */
    /* Source Map Options */
    // "sourceRoot": "",                            /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                               /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,                     /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                       /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */
    /* Experimental Options */
    "experimentalDecorators": true, /* 用于指定是否启用实验性的装饰器特性 */
    // "emitDecoratorMetadata": true,               /* Enables experimental support for emitting type metadata for decorators. */
    /* Advanced Options */
    "skipLibCheck": true, /* 跳过声明文件的类型检查。 */
    "forceConsistentCasingInFileNames": true /* 禁止对同一文件使用大小写不一致的引用。 */
  }
}